{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Borja Rojo\
brojo@u.rochester.edu\
\
Partner: Daniel Saltz\
\
Code: p2Func.c\
\
p2Func.c is the file with all my code for this lab\
\
This lab was an exercise in using pointers to functions.\
\
The functions created were myrand(), bubble_sort(), gtcmp(), and ltcmp().\
\
myrand() returns a random int. It was used to fill an array with random values, which were then later sorted,\
\
bubble_sort() took an int, and array of ints, and a function. The int was an index counter meant to be the size of the array. The array of ints is the array that is passed to be sorted. The function was the comparison used in the sorting algorithm.\
\
gtcmp() takes two ints and compares their values. If the first int parameter was greater than the left one, then 1 would be returned. Otherwise, it would return 0.\
\
ltcmp() takes two ints and compares their values. If the first int parameter was less than the left one, then 1 would be returned. Otherwise, it would return 0.\
\
}
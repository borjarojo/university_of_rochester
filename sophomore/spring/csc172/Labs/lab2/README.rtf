{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf160
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Borja Rojo\
Due February 1, 2014\
CSC 172\
Lab 3\
Lab Partner : Daniel Saltz\
\
JAVA FILE: Lab2Main, MyNode, SimpleLinkedList, Lab2List\
\
This lab was about creating classes to have a linked list and to be able to manipulate it. My list class implemented the SimpleLinkedList interface which held: insert, delete, printList, lookup, and isEmpty. The insert and delete functions did what they imply. And important thing to note is that the insert function always inserted on the front, which greatly reduces the Big O. I think this is more than fine due to the lack of manipulability in a singly linked list. lookup was used to check if something was in the list, that way we can check to see if we should insert it or not. printList prints the list, and isEmpty checks if there are any nodes in the list already.\
\
HOW TO RUN:\
Compile in Eclipse and Run.}